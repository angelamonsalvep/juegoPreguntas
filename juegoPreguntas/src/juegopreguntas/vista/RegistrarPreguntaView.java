/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package juegopreguntas.vista;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import juegopreguntas.conexion.Conexion;
import juegopreguntas.model.Categoria;
import juegopreguntas.model.Pregunta;

/**
 *
 * @author Angelita
 */
public class RegistrarPreguntaView extends javax.swing.JFrame {
    
    private Pregunta pregunta = new Pregunta();

    public Pregunta getPregunta() {
        return pregunta;
    }

    /**
     * Creates new form RegistrarPreguntaView
     */
    public RegistrarPreguntaView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta_descripcionCategoria = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jcb_categorias = new javax.swing.JComboBox<>();
        jb_guardarPregunta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(440, 200));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("CREAR PREGUNTA");

        jLabel2.setText("DESCRIPCIÓN: ");

        jScrollPane1.setToolTipText("");
        jScrollPane1.setHorizontalScrollBar(null);

        jta_descripcionCategoria.setColumns(20);
        jta_descripcionCategoria.setLineWrap(true);
        jta_descripcionCategoria.setRows(5);
        jta_descripcionCategoria.setAutoscrolls(false);
        jScrollPane1.setViewportView(jta_descripcionCategoria);

        jLabel3.setText("CATEGORIA: ");

        jcb_categorias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jb_guardarPregunta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jb_guardarPregunta.setText("GUARDAR");
        jb_guardarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_guardarPreguntaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcb_categorias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jb_guardarPregunta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel1)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jcb_categorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jb_guardarPregunta)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_guardarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_guardarPreguntaActionPerformed
        // TODO add your handling code here:
        registarPregunta();
        RegistrarRespuestasView registrarRespuestasView = new RegistrarRespuestasView();
        registrarRespuestasView.mostrarPregunta(pregunta.getDescripcion());
        registrarRespuestasView.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jb_guardarPreguntaActionPerformed

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarPreguntaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarPreguntaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarPreguntaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarPreguntaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new RegistrarPreguntaView().setVisible(true);
                
            }
        });
    }
    
    /*--------------------------------------------------------------
    función que retorna una lista de objetos de tipo categoria, los cuales
    se obtienen de la base de datos, por medio de una consulta SQL.
    --------------------------------------------------------------*/
    public ArrayList<Categoria> consultarCategorias(){
        
        ArrayList<Categoria> listCategorias = new ArrayList<>();
        try{
            Conexion conecta = new Conexion();
            Connection con = (Connection) conecta.getConexion();
            
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM categoria;");
            
            int i=0;
            while(rs.next())  {
                Categoria categoria = new Categoria();
                categoria.setId(Integer.parseInt(rs.getString(1)));
                System.out.println("id_cat:  " + categoria.getId());
                categoria.setDescripcion(rs.getString(2));
                System.out.println("descripción_cat: " + categoria.getDescripcion());
                categoria.setNivelDificultad(Integer.parseInt(rs.getString(3)));
                System.out.println("nivel_dificultad_cat:  " + categoria.getNivelDificultad());
                i=i+1;
                listCategorias.add(categoria);
            }
                        
        } catch (Exception e){
            System.out.println(e);            
        }
        
        return listCategorias;
    }
    
    
    
    /*--------------------------------------------------------------
    función para llenar combobox con una lista de categorias, las cuales se
    obtienen de la base de datos
    ----------------------------------------------------------------*/
    public void llenarCBCategorias(){
        jcb_categorias.removeAllItems();
        Categoria categoria = new Categoria();
        ArrayList<Categoria> listCategorias = new ArrayList<>();
        listCategorias = consultarCategorias();
        int i=0;
        while(i<listCategorias.size()) {
            
            jcb_categorias.addItem(listCategorias.get(i).getDescripcion());
            i++;
        }
    }
    
    
    /*--------------------------------------------------------------
    función para obtener id de la categoria seleccionada en el comboBox
    --------------------------------------------------------------*/
    private int obtenerIdCategoria() {
        int id_categoria;
        id_categoria = jcb_categorias.getSelectedIndex();
        System.out.println("id_cat:  " + id_categoria);
        return id_categoria+1;
    }
    
    
    /*--------------------------------------------------------------
    función para registrar una pregunta en la base de datos
    --------------------------------------------------------------*/
    private void registarPregunta(){
          
        Conexion conecta = new Conexion();
        Connection con = (Connection) conecta.getConexion();
        
        pregunta.setDescripcion(jta_descripcionCategoria.getText());
        
        
        if(pregunta.getDescripcion().equalsIgnoreCase("")){
                  JOptionPane.showMessageDialog(null, "Debe diligenciar todos los datos", "Error", JOptionPane.WARNING_MESSAGE);
              }else {
                   try{
                         PreparedStatement ps = con.prepareStatement("INSERT INTO pregunta (descripcion_preg, id_cate_preg) VALUES (?,?)");
                         ps.setString(1, pregunta.getDescripcion());
                         ps.setInt(2, obtenerIdCategoria());

                         ps.executeUpdate();
                         
                         JOptionPane.showMessageDialog(null, "Agregado Correctamente");
                         jta_descripcionCategoria.setText("");
                     }catch (Exception e){
                          System.out.println("Error al insertar ,"+e);

                     }
              }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_guardarPregunta;
    private javax.swing.JComboBox<String> jcb_categorias;
    private javax.swing.JTextArea jta_descripcionCategoria;
    // End of variables declaration//GEN-END:variables
}
